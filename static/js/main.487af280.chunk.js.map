{"version":3,"sources":["components/Header/Logo/Logo.js","components/Header/Navbar/Navbar.js","components/Header/Header.js","components/Footer/Footer.js","integrations/api.js","components/Search/Search.jsx","integrations/Search.js","pages/Home.js","pages/Login.js","pages/Companies.js","integrations/orgIdByReviewName.js","integrations/organisationDetails.js","components/Analytics/Analytics.js","components/Response/Response.jsx","integrations/responsesByCampgainIds.js","components/Response/ResponseContainer.jsx","integrations/campaginIdByOrgId.js","components/Sidebars/Sidebar.js","components/Sidebars/Sidebars.js","pages/Review.js","components/Routing/Routing.js","App.js","serviceWorker.js","index.js"],"names":["Logo","to","className","Navbar","props","exact","activeClassName","Header","fetchReviewName","this","Component","Footer","URL","Search","state","organisationNames","searchResult","errorMessage","searchHandler","e","searchValue","target","value","toLowerCase","result","filter","organisationName","includes","setState","length","fetch","then","res","json","Promise","resolve","reject","organisations","type","placeholder","onChange","map","key","Home","id","Login","Companies","getOrgIdByReviewName","companyName","getCompanyProfile","Analytics","orgId","organisationProfile","analytics","reviewName","match","params","name","companyProfile","width","height","src","logoLink","alt","circle","spread","nps","total","averageRating","detractors","passives","promoters","Response","data","rating","respondent","firstName","userComment","count","getResponsesByCampgainIds","method","headers","Accept","body","JSON","stringify","ResponseContainer","responsesFromOrganisation","responses","campgainIds","responsesbyId","campgainId","results","Sidebar","Sidebars","Review","receivedProps","prevProps","console","log","Routing","path","render","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.487af280.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <Link to=\"/\">\r\n      <div className=\"logo\"></div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"menu\">\r\n        <li className=\"menu-item\">\r\n          <NavLink exact to=\"/\" activeClassName=\"current-menu-item\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"menu-item\">\r\n          <NavLink to=\"/login\" activeClassName=\"current-menu-item\">\r\n            Login\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"menu-item\">\r\n          <NavLink to=\"/companies\" activeClassName=\"current-menu-item\">\r\n            Companies\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\n// Components\r\nimport Logo from \"./Logo/Logo\";\r\n// import Search from \"../Search/Search\";\r\nimport NavBar from \"./Navbar/Navbar\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-container\">\r\n        <Logo />\r\n        {/* <Search fetchReviewName={this.props.fetchReviewName} /> */}\r\n        <NavBar fetchReviewName={this.props.fetchReviewName} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"company\">\r\n        <div className=\"logo\"></div>\r\n        <p className=\"company-info\">\r\n          NPS.Today ApS\r\n          <span>Vester Farimagsgade 15</span>\r\n          <span> 1606 København V</span>\r\n        </p>\r\n        <div className=\"copyright\">\r\n          <p>Copyright © 2020 All Right Reserved</p>\r\n        </div>\r\n        <ul className=\"footer-menu\">\r\n          <li className=\"footer-menu-item\">Privatlivspolitik</li>\r\n          <li className=\"footer-menu-item\">Forretningsbetingelser</li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"social-media\">\r\n        <span>FB</span>\r\n        <span>YT</span>\r\n        <span>IN</span>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const URL = \"https://sandbox.api.nps.today/reviews/\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n// Method\r\nimport { getSearch } from \"../../integrations/Search\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    organisationNames: [],\r\n    searchResult: [],\r\n    errorMessage: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const organisations = await getSearch();\r\n    this.setState({\r\n      organisationNames: organisations,\r\n    });\r\n  }\r\n\r\n  searchHandler = (e) => {\r\n    const searchValue = e.target.value.toLowerCase();\r\n    if (!searchValue) {\r\n      this.setState({\r\n        searchResult: [],\r\n      });\r\n    } else {\r\n      const result = this.state.organisationNames.filter((organisationName) => {\r\n        return organisationName.toLowerCase().includes(searchValue);\r\n      });\r\n      this.setState(\r\n        {\r\n          searchResult: result,\r\n        },\r\n        () => {\r\n          if (this.state.searchResult.length === 0) {\r\n            this.setState({\r\n              errorMessage: \"No Results...\",\r\n            });\r\n          } else {\r\n            this.setState({\r\n              errorMessage: null,\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search for company\"\r\n            onChange={this.searchHandler}\r\n          />\r\n        </div>\r\n        <div className=\"search-result-wrapper\">\r\n          <ul className=\"search-results\">\r\n            {this.state.searchResult.map((res, key) => {\r\n              return (\r\n                <Link key={key} to={\"/r/\" + res}>\r\n                  <li className=\"search-item\">{res || <Skeleton />} </li>\r\n                </Link>\r\n              );\r\n            })}\r\n            {this.state.errorMessage === null ? (\r\n              \"\"\r\n            ) : (\r\n              <li>{this.state.errorMessage}</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","// const API_URL = \"https://sandbox.api.nps.today/reviews/reviewNames\";\r\n\r\n// export const getSearch = (callback) => {\r\n//   fetch(API_URL)\r\n//     .then((res) => res.json())\r\n//     .then((response) => {\r\n//       return callback(response);\r\n//     });\r\n// };\r\n\r\n\r\nimport { URL } from \"./api\";\r\n\r\nexport const getSearch = () => {\r\n  const data = fetch(URL + 'reviewNames' )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((json) => {\r\n      return new Promise((resolve, reject) => {\r\n        return resolve(json);\r\n      });\r\n    });\r\n  return data;\r\n};","import React, { Component } from \"react\";\r\n\r\n// Components\r\nimport Search from \"../components/Search/Search\";\r\n\r\nclass Home extends Component {\r\n  render(props) {\r\n    return (\r\n      <div className=\"content-wrapper-frontpage\">\r\n        <main id=\"frontpage\">\r\n          <Search {...props} />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <main>\r\n        <div className=\"container\">Login</div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst Companies = () => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <main>\r\n        <div className=\"container\">Companies</div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n","import { URL } from \"./api\";\r\n\r\nexport const getOrgIdByReviewName = (companyName) => {\r\n  const data = fetch(URL + companyName + \"/orgId\")\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((json) => {\r\n      return new Promise((resolve, reject) => {\r\n        return resolve(json);\r\n      });\r\n    });\r\n  return data;\r\n};","import { URL } from \"./api\";\r\n\r\nexport const getAnalytics = (id) => {\r\n  const data = fetch(URL + \"analytics?orgId=\" + id)\r\n  .then((res) => {\r\n    return res.json();\r\n  })\r\n  .then((json) => {\r\n    return new Promise((resolve, reject) => {\r\n      return resolve(json);\r\n    })\r\n  })\r\n  return data;\r\n}\r\n\r\nexport const getCompanyProfile = (id) => {\r\n  const data = fetch(URL + \"/organization/profile?orgId=\" + id)\r\n  .then((res) => {\r\n    return res.json();\r\n  })\r\n  .then((json) => {\r\n    return new Promise((resolve, reject) => {\r\n      return resolve(json);\r\n    })\r\n  })\r\n  return data;\r\n}","import React, { Component } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n// Method\r\nimport { getOrgIdByReviewName } from \"../../integrations/orgIdByReviewName\";\r\nimport {\r\n  getAnalytics,\r\n  getCompanyProfile,\r\n} from \"../../integrations/organisationDetails\";\r\n\r\nclass Analytics extends Component {\r\n  state = {\r\n    orgId: null,\r\n    organisationProfile: null,\r\n    analytics: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let reviewName = this.props.match.params.name;\r\n    const orgId = await getOrgIdByReviewName(reviewName);\r\n    const analytics = await getAnalytics(orgId);\r\n    const companyProfile = await getCompanyProfile(orgId);\r\n\r\n    this.setState({\r\n      orgId: orgId,\r\n      organisationProfile: companyProfile,\r\n      analytics: analytics,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"analytics\" className=\"container\">\r\n        <div className=\"logo\">\r\n          {this.state.organisationProfile === null ? (\r\n            <Skeleton width={250} height={100} />\r\n          ) : (\r\n            <img\r\n              src={this.state.organisationProfile.logoLink}\r\n              alt={this.state.organisationProfile.reviewName + \" Logo\"}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"analytics\">\r\n          <div className=\"gauge\">\r\n            <span>\r\n              {this.state.analytics === null ? (\r\n                <Skeleton circle={true} height={50} width={50} />\r\n              ) : (\r\n                this.state.analytics.spread.nps\r\n              )}\r\n            </span>\r\n          </div>\r\n          <div className=\"name\">\r\n            {this.state.organisationProfile === null ? (\r\n              <Skeleton />\r\n            ) : (\r\n              this.state.organisationProfile.reviewName\r\n            )}\r\n          </div>\r\n          <div className=\"total-respondents\">\r\n            {this.state.analytics === null ? (\r\n              <Skeleton />\r\n            ) : (\r\n              this.state.analytics.spread.total +\r\n              \" Besvarelser\" +\r\n              \" (\" +\r\n              this.state.analytics.averageRating +\r\n              \" Avg)\"\r\n            )}\r\n            <span className=\"avg\"></span>\r\n          </div>\r\n          <div className=\"spread\">\r\n            <div className=\"detractors\">\r\n              {this.state.analytics === null ? (\r\n                <Skeleton />\r\n              ) : (\r\n                this.state.analytics.spread.detractors\r\n              )}\r\n            </div>\r\n            <div className=\"passive\">\r\n              {this.state.analytics === null ? (\r\n                <Skeleton />\r\n              ) : (\r\n                this.state.analytics.spread.passives\r\n              )}\r\n            </div>\r\n            <div className=\"promoters\">\r\n              {this.state.analytics === null ? (\r\n                <Skeleton />\r\n              ) : (\r\n                this.state.analytics.spread.promoters\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","import React, { Component } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport class Response extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"response container\">\r\n        <div className=\"rating\">\r\n          <div className=\"score\">\r\n            {this.props.data.rating || (\r\n              <Skeleton circle={true} height={60} width={60} />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"user\">\r\n          {this.props.data.respondent.firstName || <Skeleton width={200} />}\r\n        </div>\r\n        <p className=\"comment\">\r\n          {this.props.data.userComment || <Skeleton count={3} />}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Response;\r\n","import { URL } from \"./api\";\r\n\r\nexport const getResponsesByCampgainIds = (id) => {\r\n  const data = fetch(URL + \"/responses?skip=0&take=10\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(id),\r\n  })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((json) => {\r\n      return new Promise((resolve, reject) => {\r\n        return resolve(json);\r\n      });\r\n    });\r\n  return data;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\n// Components\r\nimport Response from \"./Response\";\r\n\r\nimport { getOrgIdByReviewName } from \"../../integrations/orgIdByReviewName\";\r\nimport { getCampaginIdByOrgId } from \"../../integrations/campaginIdByOrgId\";\r\nimport { getResponsesByCampgainIds } from \"../../integrations/responsesByCampgainIds\";\r\n\r\nclass ResponseContainer extends Component {\r\n  state = {\r\n    orgId: null,\r\n    responsesFromOrganisation: null,\r\n    responses: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let reviewName = this.props.match.params.name;\r\n    const orgId = await getOrgIdByReviewName(reviewName);\r\n    const campgainIds = await getCampaginIdByOrgId(orgId);\r\n    const responsesbyId = await getResponsesByCampgainIds(campgainIds);\r\n\r\n    this.setState({\r\n      orgId: orgId,\r\n      campgainId: campgainIds,\r\n      responses: responsesbyId,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"responsesContainer\">\r\n        {this.state.responses === null ? <Skeleton height={150} /> : this.state.responses.results.map((data, key) => {\r\n          return <Response key={key} data={data} />\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResponseContainer;\r\n","import { URL } from \"./api\";\r\n\r\nexport const getCampaginIdByOrgId = (id) => {\r\n  const data = fetch(URL + \"/campaignIds?orgId=\" + id)\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((json) => {\r\n      return new Promise((resolve, reject) => {\r\n        return resolve(json);\r\n      });\r\n    });\r\n  return data;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar container\">\r\n      <h3>Hvad er NPS?</h3>\r\n      <p>\r\n        Net Promoter Score (NPS®) er en effektiv metode til at måle, forstå og\r\n        handle på dine kunders oplevelser.\r\n      </p>\r\n\r\n      <p>\r\n        Derfor er NPS blevet en metode, som mange succesfulde organisationer\r\n        anvender til at skabe bedre kundeoplevelser, mere loyale kunder og\r\n        derigennem øget salg.\r\n      </p>\r\n\r\n      <p>\r\n        Tilfredse kunder er glade og har fået det de forventede. Men loyale\r\n        kunder oplever at de har fået mere, er derfor mindre prisfølsomme og\r\n        køber generelt mere. De er dine ambassadører i markedet og trækker nye\r\n        kunder til.\r\n      </p>\r\n\r\n      <p>Læs mere...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Sidebar from './Sidebar';\r\n\r\nconst Sidebars = () => {\r\n  return (\r\n    <div id=\"sidebars\">\r\n      <Sidebar />\r\n      <Sidebar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebars;\r\n","import React, { Component } from \"react\";\r\n\r\n// Components\r\nimport Analytics from \"../components/Analytics/Analytics\";\r\nimport ResponseContainer from \"../components/Response/ResponseContainer\";\r\nimport Sidebars from \"../components/Sidebars/Sidebars\";\r\n\r\nclass Review extends Component {\r\n  state = {\r\n    receivedProps: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.state.receivedProps === false && prevProps !== this.props) {\r\n      this.props.fetchReviewName(this.props.match.params.name);\r\n      this.setState({\r\n        receivedProps: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"exited search component\");\r\n    this.setState({\r\n      receivedProps: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"review-page\" className=\"content-wrapper\">\r\n        <main id=\"review\">\r\n          <Analytics {...this.props} />\r\n          <ResponseContainer {...this.props} />\r\n        </main>\r\n        <aside>\r\n          <Sidebars {...this.props} />\r\n        </aside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Review;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\n// Pages\r\nimport Home from \"../../pages/Home\";\r\nimport Login from \"../../pages/Login\";\r\nimport Companies from \"../../pages/Companies\";\r\nimport Review from \"../../pages/Review\";\r\n\r\nclass Routing extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" render={(props) => <Home {...props} />} />\r\n        <Route exact path=\"/login\" render={(props) => <Login {...props} />} />\r\n        <Route\r\n          exact\r\n          path=\"/companies\"\r\n          render={(props) => <Companies {...props} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/r/:name\"\r\n          render={(props) => (\r\n            <Review fetchReviewName={this.props.fetchReviewName} {...props} />\r\n          )}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routing;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Styling\nimport \"./assets/scss/app.scss\";\n\n// Components\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\n\n// Routing\nimport Content from \"./components/Routing/Routing\";\n\nclass App extends Component {\n  state = {\n    reviewName: null,\n  };\n\n  fetchReviewName = (reviewName) => {\n    this.setState({\n      reviewName: reviewName,\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Header fetchReviewName={this.fetchReviewName} />\n        <Content fetchReviewName={this.fetchReviewName} />\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}